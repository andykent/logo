!!! 5
%html
  %head
    %title Logo
    %link{:href => to("/stylesheets/app.css"), :media => "screen", :rel => "stylesheet", :type => "text/css"}

    %script{:src => to("/javascripts/jquery.js"), :type => "text/javascript"}
    %script{:src => to("/javascripts/maths.js"), :type => "text/javascript"}
    %script{:src => to("/javascripts/logo.js"), :type => "text/javascript"}
    
    :javascript
      jQuery(document).ready(function() {
        
        var context = function() {
          return document.getElementById("turtle").getContext("2d");
        };
        
        var clearScreen = function() {
          context().clearRect(0, 0, 1000, 750);
        };
        
        var createTurtle = function() {
          return logo.turtle({x: 300, y: 300});
        };
        
        var redraw = function() {
          context().clearRect(0, 0, 1000, 750);
          turtle.draw(context());
          drawTurtleStatus();
        };
        
        var drawTurtleStatus = function() {
          jQuery(".position").text(turtle.pos().x + "," + turtle.pos().y);
          jQuery(".pen").text(turtle.pen());
          jQuery(".heading").text(turtle.heading());
        };
        
        var turtle = createTurtle();
        turtle.draw(context());
        
        drawTurtleStatus();
         
        jQuery(".console").keypress(function(event) {
          if ( event.which == 13 ) {
            var command = jQuery(this).val();
            
            if (command.match(/^FORWARD/)) {
              units = parseInt(jQuery.trim(command.substring("FORWARD".length, command.length)));
              turtle.moveForward(units);
              redraw();
            }
            
            if (command.match(/^BACK/)) {
              units = parseInt(jQuery.trim(command.substring("BACK".length, command.length)));
              console.log("Moving back unit: " + units);
              turtle.moveBack(units);
              redraw();
            }
            
            if (command.match(/^PU/)) {
              console.log("Pulling the pen up");
              turtle.penUp();
              console.log(turtle.asString());
              redraw();
            }
            
            if (command.match(/^PD/)) {
              turtle.penDown();
              redraw();
            }
            
            if (command.match(/^PENWIDTH/)) {
              units = parseInt(jQuery.trim(command.substring("PENWIDTH".length, command.length)));
              turtle.penWidth(units);
            }
            
            if (command.match(/^RIGHT/)) {
              units = parseInt(jQuery.trim(command.substring("RIGHT".length, command.length)));
              turtle.rotateRight();
              console.log(turtle.asString());
              redraw();
            }
            
            if (command.match(/^LEFT/)) {
              units = parseInt(jQuery.trim(command.substring("LEFT".length, command.length)));
              turtle.rotateLeft();
              console.log(turtle.asString());
              redraw();
            }
            
            if (command.match(/^CS/)) {
              clearScreen();
              turtle = createTurtle();
              turtle.draw(context());
            }
            console.log("The command is: " + command);
            jQuery(this).val("");
          }
        });
      });
      
  %body
    %canvas{:id => "turtle", :width => 1000, :height => 750}
    %section.instructions
      %h1 Commands
      %ul.commands
        %li FORWARD
        %li BACK
        %li RIGHT
        %li LEFT
        %li PU - pen up
        %li PD - pen down
        %li CS - Clear screen
      %ul
        %li
          %span.property Pos:
          %span.position 
        %li
          %span.property Pen:
          %span.pen 
        %li
          %span.property Heading:
          %span.heading
    
    %section.cli
      %label{:for => "console"} Please type your command below and press [Enter]:
      %div 
        %span.prompt >
        %input.console{:id => "console", :type => "text"}
     
        
          
          
